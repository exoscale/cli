name: release

on:
  push:
#TODO remove
    branches:
      - 'sauterp/sc-75094/gh-action-aur-release'
#TODO uncomment
#    tags:
#      - 'v[0-9]+\.[0-9]+\.[0-9]+'

jobs:
  goreleaser:
    runs-on: ubuntu-latest

    outputs:
      version_tag: ${{ steps.get-version-tag.outputs.version_tag }}
      linux_amd64_checksum: ${{ steps.get-linux-amd64-checksum.outputs.linux_amd64_checksum }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      #TODO remove
      - run: git submodule update --init --recursive go.mk
        shell: bash

      #TODO remove
      - run: |
          git tag -d v1.71.0
          git tag v1.71.0
        shell: bash

#TODO uncomment
#      - uses: ./.github/actions/build
#
#      - uses: ./go.mk/.github/actions/release
#        with:
#          release_github_token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
#          registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
#          registry_password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: echo "version_tag=$(make get-version-tag)" >> $GITHUB_OUTPUT
        id: get-version-tag
        shell: bash

      #TODO remove
      - run: mkdir dist && echo "543d88ff8c224e14a077408ca2f1f6993c15c55dc252c61c4875256a28fc09ff  exoscale-cli_1.71.0_linux_amd64.tar.gz" > dist/exoscale-cli_1.71.0_checksums.txt
        shell: bash

      - run: echo "linux_amd64_checksum="$(grep -P 'exoscale-cli_[0-9]+\.[0-9]+\.[0-9]_linux_amd64.tar.gz' dist/exoscale-cli_*_checksums.txt | head -n 1 | cut -c1-64) >> $GITHUB_OUTPUT
        id: get-linux-amd64-checksum
        shell: bash

  archrelease:
    needs: goreleaser

    runs-on: ubuntu-latest

    strategy:
      matrix:
        aurpkg:
          - exoscale-cli
          - exoscale-cli-bin

    container:
      image: archlinux
      volumes:
        - /var/cache/pacman/pkg/

    steps:
      - name: test arch linux
        run: |
          echo ${{ needs.goreleaser.outputs.version_tag }}
          echo ${{ needs.goreleaser.outputs.linux_amd64_checksum }}
          useradd -G root runner
          mkdir /home/runner/
          chown -R runner /home/runner
        shell: bash

      - name: install tools
        run: pacman --noconfirm -Sy git openssh glibc sudo binutils make gcc pkg-config fakeroot
        shell: bash

      - name: Add SSH key
        run: |
            cd /home/runner/
            sudo -u runner mkdir -p /home/runner/.ssh
            sudo -u runner ssh-keyscan aur.archlinux.org >> /home/runner/.ssh/known_hosts
            sudo -u runner echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > /home/runner/.ssh/github_actions
            chown -R runner /home/runner/
            sudo -u runner chmod 600 /home/runner/.ssh/github_actions
            sudo -u runner ssh-agent -a /home/runner/ssh_agent.sock
            ssh-add /home/runner/.ssh/github_actions
        env:
          SSH_AUTH_SOCK: /home/runner/ssh_agent.sock
          GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/home/runner/.ssh/known_hosts"
        shell: bash

      - name: makepkg
        run: |
          cd /home/runner/
          git clone aur@aur.archlinux.org:${{ matrix.aurpkg }}.git
          chown -R runner /home/runner/
          sudo -u runner whoami
          cd /home/runner/${{ matrix.aurpkg }}
          sudo -u runner sed -i '/^pkgver=/s/.*/pkgver=${{ needs.goreleaser.outputs.version_tag }}/' PKGBUILD
          if [ ${{ matrix.aurpkg }} == "exoscale-cli-bin" ];
          then
            sudo -u runner sed -i "/^sha256sums=/s/.*/sha256sums=\('${{ needs.goreleaser.outputs.linux_amd64_checksum }}'\)/" PKGBUILD
          fi
          sudo -u runner cat PKGBUILD

          sudo -u runner makepkg

          sudo -u runner makepkg --printsrcinfo > .SRCINFO
          sudo -u runner git add PKGBUILD .SRCINFO
          sudo -u runner git config --global user.email "ops@exoscale.com"
          sudo -u runner git config --global user.name "Exoscale"
          sudo -u runner git commit -m "release ${{ needs.goreleaser.outputs.version_tag }}"
        shell: bash
        env:
          SSH_AUTH_SOCK: /home/runner/ssh_agent.sock
          GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/home/runner/.ssh/known_hosts"
